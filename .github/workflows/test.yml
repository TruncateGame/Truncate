name: Test

on:
  push:
    branches: ["staging", "main"]
  pull_request:
    branches: ["staging", "main"]

env:
  CARGO_TERM_COLOR: always
  WASM_PACK_VERSION: "v0.12.1"

jobs:
  test:
    name: Test
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        workspace: [truncate_core, truncate_client, truncate_server]
        include:
          - build: linux
            os: ubuntu-latest
            rust: beta
            target: x86_64-unknown-linux-musl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.rustup
            target
          key: ${{ runner.os }}-${{ matrix.rust }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          default: true
          components: rustfmt, clippy

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: ${{env.WASM_PACK_VERSION}}

      - name: Install Rust components
        if: matrix.workspace == 'truncate_client'
        run: |-
          cargo install -f wasm-bindgen-cli  --version 0.2.93
          rustup target add wasm32-unknown-unknown

      - name: Test
        working-directory: ./${{ matrix.workspace }}
        run: cargo test

      - name: Ensure wasm compiles
        if: matrix.workspace == 'truncate_client'
        run: ./.backstage/build-web-client.sh
