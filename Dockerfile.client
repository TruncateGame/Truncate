FROM rust:latest as build

RUN apt-get update && apt-get install -y \
    libssl-dev \
    pkg-config \
    build-essential \
    cmake \
    curl \
    git \
    binaryen \
    jq

RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
RUN apt-get install -y nodejs

RUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
# Keep this wasm-bindgen-cli version aligned with the latest egui release's dependency
RUN cargo install -f wasm-bindgen-cli  --version 0.2.93
RUN rustup target add wasm32-unknown-unknown

RUN mkdir /app
WORKDIR /app

ARG TR_COMMIT
ENV TR_COMMIT=$TR_COMMIT
ARG TR_MSG
ENV TR_MSG=$TR_MSG
ARG TR_ENV
ENV TR_ENV=$TR_ENV

ADD truncate_server /app/truncate_server
ADD truncate_client /app/truncate_client
ADD truncate_dueller /app/truncate_dueller
ADD truncate_core /app/truncate_core
ADD dict_builder /app/dict_builder
ADD Cargo.* /app

ADD web_client /app/web_client
ADD .backstage /app/.backstage
RUN chmod +x .backstage/build-web-client.sh
ENV TRUNC_OPT=true
RUN .backstage/build-web-client.sh

# Thin Docker image for runtime

FROM debian:bullseye-slim

RUN apt-get update && apt-get install -y curl debian-keyring debian-archive-keyring apt-transport-https \
    && curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg \
    && curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list \
    && apt update \
    && apt install caddy

RUN mkdir /app
WORKDIR /app

ADD Caddyfile /app
COPY --from=build /app/web_client/src/_site /app/web_client

CMD caddy run
